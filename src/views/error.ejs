<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            background: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .error-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .error-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            padding: 40px;
            text-align: center;
            max-width: 600px;
        }
        .error-icon {
            font-size: 120px;
            color: #dc3545;
            margin-bottom: 20px;
        }
        .error-code {
            font-size: 4rem;
            font-weight: bold;
            color: #343a40;
            margin-bottom: 10px;
        }
        .error-title {
            font-size: 1.5rem;
            color: #6c757d;
            margin-bottom: 20px;
        }
        .error-description {
            color: #6c757d;
            margin-bottom: 30px;
            line-height: 1.6;
        }
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 25px;
            padding: 12px 30px;
            font-weight: 600;
        }
        .security-notice {
            background: #e7f3ff;
            border: 1px solid #b6d7ff;
            border-radius: 10px;
            padding: 20px;
            margin-top: 30px;
        }
        .navbar-brand {
            font-weight: bold;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container">
            <a class="navbar-brand" href="/">
                <i class="bi bi-shield-lock-fill"></i> Privacy-First Data Vault
            </a>
        </div>
    </nav>

    <div class="error-container">
        <div class="error-card">
            <div class="error-icon">
                <i class="bi bi-exclamation-triangle-fill"></i>
            </div>
            
            <div class="error-code">
                <%= typeof statusCode !== 'undefined' ? statusCode : '500' %>
            </div>
            
            <div class="error-title">
                <%= typeof title !== 'undefined' ? title : 'Something went wrong!' %>
            </div>
            
            <div class="error-description">
                <%= typeof msg !== 'undefined' ? msg : 'An unexpected error occurred. Please try again or contact support if the problem persists.' %>
            </div>
            
            <div class="d-flex justify-content-center gap-3">
                <a href="/" class="btn btn-primary">
                    <i class="bi bi-house"></i> Go Home
                </a>
                <a href="/dashboard" class="btn btn-outline-primary">
                    <i class="bi bi-person"></i> Dashboard
                </a>
                <button class="btn btn-outline-secondary" onclick="history.back()">
                    <i class="bi bi-arrow-left"></i> Go Back
                </button>
            </div>
            
            <div class="security-notice">
                <h6><i class="bi bi-shield-check"></i> Your Data Remains Secure</h6>
                <p class="mb-0">
                    This error does not affect the security of your encrypted data. 
                    All personal information remains safely encrypted and protected.
                </p>
            </div>
            
            <% if (typeof error !== 'undefined' && process.env.NODE_ENV === 'development') { %>
            <div class="mt-4">
                <details class="text-start">
                    <summary class="btn btn-outline-warning btn-sm">
                        <i class="bi bi-bug"></i> Show Technical Details (Development Mode)
                    </summary>
                    <div class="mt-3 p-3 bg-light rounded">
                        <h6>Error Details:</h6>
                        <p><strong>Message:</strong> <%= error.message %></p>
                        <% if (error.stack) { %>
                        <h6>Stack Trace:</h6>
                        <pre class="small text-muted"><%= error.stack %></pre>
                        <% } %>
                    </div>
                </details>
            </div>
            <% } %>
        </div>
    </div>
    
    <footer class="text-center py-4 mt-5">
        <div class="container">
            <p class="text-muted mb-0">
                &copy; <%= new Date().getFullYear() %> Privacy-First Data Vault. 
                Your privacy is our priority.
            </p>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Auto-reload page after network errors (if online)
        if (navigator.onLine === false) {
            window.addEventListener('online', () => {
                setTimeout(() => {
                    window.location.reload();
                }, 2000);
            });
        }
        
        // Report error to admin (in production)
        if (typeof gtag !== 'undefined' && '<%= process.env.NODE_ENV %>' === 'production') {
            gtag('event', 'exception', {
                'description': '<%= typeof msg !== "undefined" ? msg : "Unknown error" %>',
                'fatal': false
            });
        }
        
        // Add retry functionality
        let retryCount = 0;
        const maxRetries = 3;
        
        function retryRequest() {
            if (retryCount < maxRetries) {
                retryCount++;
                setTimeout(() => {
                    window.location.reload();
                }, 1000 * retryCount);
            }
        }
        
        // Show retry button for network errors
        if (window.location.search.includes('network') || 
            window.location.search.includes('timeout')) {
            const retryBtn = document.createElement('button');
            retryBtn.className = 'btn btn-warning mt-3';
            retryBtn.innerHTML = '<i class="bi bi-arrow-clockwise"></i> Retry';
            retryBtn.onclick = retryRequest;
            document.querySelector('.error-card').appendChild(retryBtn);
        }
    </script>
</body>
</html>