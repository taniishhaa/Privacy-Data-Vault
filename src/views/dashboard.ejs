<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= typeof title !== 'undefined' ? title : 'Privacy Vault Dashboard' %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            background: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .navbar-brand {
            font-weight: bold;
        }
        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            transition: transform 0.2s ease;
        }
        .card:hover {
            transform: translateY(-2px);
        }
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 25px;
            padding: 10px 25px;
            font-weight: 600;
        }
        .btn-primary:hover {
            transform: translateY(-1px);
        }
        .stat-card {
            text-align: center;
            padding: 25px 20px;
        }
        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 5px;
        }
        .stat-label {
            color: #6c757d;
            font-weight: 500;
        }
        .vault-locked {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border: 2px dashed #667eea;
            border-radius: 15px;
            padding: 40px 20px;
            text-align: center;
        }
        .vault-unlocked {
            background: white;
            border-radius: 15px;
            padding: 30px;
        }
        .category-badge {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 5px 12px;
            border-radius: 15px;
            font-size: 0.875rem;
            margin: 2px;
            display: inline-block;
        }
        .attribute-item {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 10px;
            border-left: 4px solid #667eea;
        }
        .modal-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
        .unlock-icon {
            font-size: 5rem;
            color: #667eea;
            margin-bottom: 20px;
        }
        .progress {
            height: 8px;
            border-radius: 4px;
        }
        .disclosure-item {
            border-left: 4px solid;
            padding: 15px;
            margin-bottom: 10px;
            border-radius: 0 8px 8px 0;
        }
        .status-pending { border-left-color: #ffc107; background: #fff8e1; }
        .status-verified { border-left-color: #28a745; background: #e8f5e8; }
        .status-expired { border-left-color: #6c757d; background: #f8f9fa; }
        .status-revoked { border-left-color: #dc3545; background: #ffeaea; }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary sticky-top">
        <div class="container">
            <a class="navbar-brand" href="/dashboard">
                <i class="bi bi-shield-lock-fill"></i> Privacy-First Data Vault
            </a>
            
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link active" href="/dashboard">
                            <i class="bi bi-speedometer2"></i> Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/share">
                            <i class="bi bi-share"></i> Share Data
                        </a>
                    </li>
                </ul>
                
                <div class="navbar-nav">
                    <div class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown">
                            <i class="bi bi-person-circle"></i> <span id="navUsername">User</span>
                        </a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#profileModal">
                                <i class="bi bi-person"></i> Profile
                            </a></li>
                            <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#securityModal">
                                <i class="bi bi-shield-check"></i> Security
                            </a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="#" id="logoutBtn">
                                <i class="bi bi-box-arrow-right"></i> Logout
                            </a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <div class="container py-4">
        <!-- Alert Container -->
        <div id="alertContainer"></div>

        <!-- Welcome Section -->
        <div class="row mb-4">
            <div class="col-md-8">
                <h2>Welcome to Your Privacy Vault</h2>
                <p class="text-muted">Your personal data, encrypted and under your complete control</p>
            </div>
            <div class="col-md-4 text-end">
                <button class="btn btn-primary" id="addDataBtn">
                    <i class="bi bi-plus-circle"></i> Add Data
                </button>
                <button class="btn btn-outline-primary ms-2" id="shareDataBtn">
                    <i class="bi bi-share"></i> Share
                </button>
            </div>
        </div>

        <!-- Statistics Cards -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card stat-card">
                    <div class="stat-number" id="totalAttributes">0</div>
                    <div class="stat-label">Stored Attributes</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card stat-card">
                    <div class="stat-number" id="totalCategories">0</div>
                    <div class="stat-label">Data Categories</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card stat-card">
                    <div class="stat-number" id="totalDisclosures">0</div>
                    <div class="stat-label">Total Disclosures</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card stat-card">
                    <div class="stat-number" id="activeDisclosures">0</div>
                    <div class="stat-label">Active Disclosures</div>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="row">
            <!-- Vault Content -->
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-safe"></i> Your Encrypted Vault
                        </h5>
                        <div>
                            <button class="btn btn-sm btn-outline-primary" id="refreshVaultBtn">
                                <i class="bi bi-arrow-clockwise"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body" id="vaultContent">
                        <!-- Locked State -->
                        <div class="vault-locked" id="vaultLocked">
                            <div class="unlock-icon">
                                <i class="bi bi-lock-fill"></i>
                            </div>
                            <h5>Vault is Locked</h5>
                            <p class="text-muted mb-4">Enter your password to unlock and view your encrypted data</p>
                            <button class="btn btn-primary" id="unlockBtn">
                                <i class="bi bi-unlock"></i> Unlock Vault
                            </button>
                        </div>

                        <!-- Unlocked State -->
                        <div class="vault-unlocked" id="vaultUnlocked" style="display: none;">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h6>Decrypted Vault Contents</h6>
                                <button class="btn btn-sm btn-outline-secondary" id="lockVaultBtn">
                                    <i class="bi bi-lock"></i> Lock Vault
                                </button>
                            </div>
                            <div id="vaultData">
                                <!-- Vault data will be loaded here -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <!-- Recent Activity -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="card-title mb-0">
                            <i class="bi bi-clock-history"></i> Recent Activity
                        </h6>
                    </div>
                    <div class="card-body">
                        <div id="recentActivity">
                            <p class="text-muted text-center">No recent activity</p>
                        </div>
                    </div>
                </div>

                <!-- Recent Disclosures -->
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h6 class="card-title mb-0">
                            <i class="bi bi-share"></i> Recent Disclosures
                        </h6>
                        <a href="/share" class="btn btn-sm btn-outline-primary">View All</a>
                    </div>
                    <div class="card-body">
                        <div id="recentDisclosures">
                            <p class="text-muted text-center">No disclosures yet</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Unlock Password Modal -->
    <div class="modal fade" id="unlockModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="bi bi-unlock"></i> Unlock Your Vault
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="unlockForm">
                        <div class="mb-3">
                            <label for="unlockPassword" class="form-label">Enter your vault password</label>
                            <input type="password" class="form-control" id="unlockPassword" required 
                                   placeholder="Your encryption password">
                            <div class="form-text">
                                <i class="bi bi-info-circle"></i> 
                                This password is used to decrypt your data locally
                            </div>
                        </div>
                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-unlock"></i> Unlock
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Data Modal -->
    <div class="modal fade" id="addDataModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="bi bi-plus-circle"></i> Add Personal Data
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addDataForm">
                        <div class="row mb-3">
                            <div class="col-12">
                                <label for="vaultPassword" class="form-label">Vault Password *</label>
                                <input type="password" class="form-control" id="vaultPassword" required 
                                       placeholder="Enter your vault password">
                            </div>
                        </div>

                        <!-- Personal Information -->
                        <div class="card mb-3">
                            <div class="card-header">
                                <h6 class="mb-0">
                                    <i class="bi bi-person"></i> Personal Information
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="firstName" class="form-label">First Name</label>
                                        <input type="text" class="form-control" id="firstName" name="firstName">
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="lastName" class="form-label">Last Name</label>
                                        <input type="text" class="form-control" id="lastName" name="lastName">
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="dateOfBirth" class="form-label">Date of Birth</label>
                                        <input type="date" class="form-control" id="dateOfBirth" name="dateOfBirth">
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="nationality" class="form-label">Nationality</label>
                                        <input type="text" class="form-control" id="nationality" name="nationality">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Contact Information -->
                        <div class="card mb-3">
                            <div class="card-header">
                                <h6 class="mb-0">
                                    <i class="bi bi-telephone"></i> Contact Information
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="phoneNumber" class="form-label">Phone Number</label>
                                        <input type="tel" class="form-control" id="phoneNumber" name="phoneNumber">
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="email" class="form-label">Email</label>
                                        <input type="email" class="form-control" id="email" name="email">
                                    </div>
                                    <div class="col-12 mb-3">
                                        <label for="address" class="form-label">Address</label>
                                        <textarea class="form-control" id="address" name="address" rows="2"></textarea>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="city" class="form-label">City</label>
                                        <input type="text" class="form-control" id="city" name="city">
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="country" class="form-label">Country</label>
                                        <input type="text" class="form-control" id="country" name="country">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-shield-check"></i> Encrypt & Save
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Profile Modal -->
    <div class="modal fade" id="profileModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="bi bi-person"></i> User Profile
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="profileContent">
                    <!-- Profile content will be loaded here -->
                </div>
            </div>
        </div>
    </div>

    <!-- Security Modal -->
    <div class="modal fade" id="securityModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="bi bi-shield-check"></i> Security Settings
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="d-grid gap-2">
                        <button class="btn btn-outline-primary" id="changePasswordBtn">
                            <i class="bi bi-key"></i> Change Password
                        </button>
                        <button class="btn btn-outline-warning" id="setup2FABtn">
                            <i class="bi bi-shield-lock"></i> Setup 2FA
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        // Global variables
        let currentUser = null;
        let isVaultUnlocked = false;
        let vaultData = null;

        // Initialize on page load
        document.addEventListener('DOMContentLoaded', function() {
            initializeDashboard();
            setupEventListeners();
        });

        // Check authentication and initialize
        function initializeDashboard() {
            const token = localStorage.getItem('accessToken');
            if (!token) {
                window.location.href = '/login';
                return;
            }

            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;
            loadUserProfile();
            loadVaultStats();
        }

        // Setup event listeners
        function setupEventListeners() {
            // Logout
            document.getElementById('logoutBtn').addEventListener('click', handleLogout);

            // Vault actions
            document.getElementById('unlockBtn').addEventListener('click', () => {
                new bootstrap.Modal(document.getElementById('unlockModal')).show();
            });

            document.getElementById('unlockForm').addEventListener('submit', handleUnlockVault);
            document.getElementById('lockVaultBtn').addEventListener('click', handleLockVault);

            // Data actions
            document.getElementById('addDataBtn').addEventListener('click', () => {
                new bootstrap.Modal(document.getElementById('addDataModal')).show();
            });

            document.getElementById('addDataForm').addEventListener('submit', handleAddData);

            // Navigation
            document.getElementById('shareDataBtn').addEventListener('click', () => {
                window.location.href = '/share';
            });

            // Refresh
            document.getElementById('refreshVaultBtn').addEventListener('click', () => {
                if (isVaultUnlocked) {
                    loadVaultData(document.getElementById('unlockPassword').value);
                }
                loadVaultStats();
            });
        }

        // Load user profile
        async function loadUserProfile() {
            try {
                const response = await axios.get('/api/auth/me');
                currentUser = response.data.data.user;
                document.getElementById('navUsername').textContent = currentUser.username;
                
                // Update profile modal content
                document.getElementById('profileContent').innerHTML = `
                    <div class="row">
                        <div class="col-12 mb-3">
                            <strong>Username:</strong> ${currentUser.username}
                        </div>
                        <div class="col-12 mb-3">
                            <strong>Email:</strong> ${currentUser.email}
                        </div>
                        <div class="col-12 mb-3">
                            <strong>Role:</strong> ${currentUser.role}
                        </div>
                        <div class="col-12 mb-3">
                            <strong>Account Status:</strong> 
                            <span class="badge ${currentUser.isActive ? 'bg-success' : 'bg-danger'}">
                                ${currentUser.isActive ? 'Active' : 'Inactive'}
                            </span>
                        </div>
                        <div class="col-12 mb-3">
                            <strong>2FA Status:</strong> 
                            <span class="badge ${currentUser.twoFactorEnabled ? 'bg-success' : 'bg-warning'}">
                                ${currentUser.twoFactorEnabled ? 'Enabled' : 'Disabled'}
                            </span>
                        </div>
                    </div>
                `;
            } catch (error) {
                showAlert('Failed to load user profile', 'warning');
            }
        }

        // Load vault statistics
        async function loadVaultStats() {
            try {
                const response = await axios.get('/api/vault/stats');
                const stats = response.data.data.stats;
                
                document.getElementById('totalAttributes').textContent = stats.totalAttributes || 0;
                document.getElementById('totalCategories').textContent = stats.categories?.length || 0;
                document.getElementById('totalDisclosures').textContent = stats.disclosures?.total || 0;
                document.getElementById('activeDisclosures').textContent = stats.disclosures?.active || 0;
                
                // Load recent disclosures
                if (stats.disclosures && stats.disclosures.total > 0) {
                    loadRecentDisclosures();
                }
            } catch (error) {
                console.error('Failed to load vault stats:', error);
            }
        }

        // Handle vault unlock
        async function handleUnlockVault(e) {
            e.preventDefault();
            const password = document.getElementById('unlockPassword').value;
            
            if (!password) {
                showAlert('Please enter your password', 'warning');
                return;
            }

            try {
                await loadVaultData(password);
                bootstrap.Modal.getInstance(document.getElementById('unlockModal')).hide();
                showAlert('Vault unlocked successfully!', 'success');
            } catch (error) {
                showAlert(error.response?.data?.message || 'Failed to unlock vault', 'danger');
            }
        }

        // Load vault data
        async function loadVaultData(password) {
            try {
                const response = await axios.get('/api/vault/view', {
                    params: { password }
                });
                
                vaultData = response.data.data.vault;
                isVaultUnlocked = true;
                displayVaultData();
                
                document.getElementById('vaultLocked').style.display = 'none';
                document.getElementById('vaultUnlocked').style.display = 'block';
            } catch (error) {
                throw error;
            }
        }

        // Display vault data
        function displayVaultData() {
            const vaultDataContainer = document.getElementById('vaultData');
            
            if (!vaultData || !vaultData.attributes || Object.keys(vaultData.attributes).length === 0) {
                vaultDataContainer.innerHTML = `
                    <div class="text-center py-4">
                        <i class="bi bi-inbox display-1 text-muted"></i>
                        <h5 class="mt-3">No Data Stored</h5>
                        <p class="text-muted">Add some personal data to get started</p>
                        <button class="btn btn-primary" onclick="document.getElementById('addDataBtn').click()">
                            <i class="bi bi-plus-circle"></i> Add Data
                        </button>
                    </div>
                `;
                return;
            }

            let html = '';
            
            // Display categories
            Object.entries(vaultData.attributes).forEach(([category, attributes]) => {
                if (Object.keys(attributes).length > 0) {
                    html += `
                        <div class="mb-4">
                            <h6 class="mb-3">
                                <span class="category-badge">${formatCategoryName(category)}</span>
                            </h6>
                            <div class="row">
                    `;
                    
                    Object.entries(attributes).forEach(([field, value]) => {
                        html += `
                            <div class="col-md-6 mb-2">
                                <div class="attribute-item">
                                    <strong>${formatFieldName(field)}:</strong> ${value}
                                </div>
                            </div>
                        `;
                    });
                    
                    html += '</div></div>';
                }
            });
            
            vaultDataContainer.innerHTML = html;
        }

        // Handle vault lock
        function handleLockVault() {
            isVaultUnlocked = false;
            vaultData = null;
            document.getElementById('unlockPassword').value = '';
            document.getElementById('vaultLocked').style.display = 'block';
            document.getElementById('vaultUnlocked').style.display = 'none';
            showAlert('Vault locked successfully', 'info');
        }

        // Handle add data
        async function handleAddData(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const password = document.getElementById('vaultPassword').value;
            
            if (!password) {
                showAlert('Vault password is required', 'warning');
                return;
            }

            // Collect form data
            const attributes = {};
            for (let [key, value] of formData.entries()) {
                if (key !== 'vaultPassword' && value.trim()) {
                    attributes[key] = value.trim();
                }
            }

            if (Object.keys(attributes).length === 0) {
                showAlert('Please enter at least one attribute', 'warning');
                return;
            }

            try {
                const response = await axios.post('/api/vault/add', {
                    password,
                    attributes
                });
                
                bootstrap.Modal.getInstance(document.getElementById('addDataModal')).hide();
                document.getElementById('addDataForm').reset();
                
                showAlert('Data encrypted and saved successfully!', 'success');
                loadVaultStats();
                
                if (isVaultUnlocked) {
                    loadVaultData(password);
                }
            } catch (error) {
                showAlert(error.response?.data?.message || 'Failed to save data', 'danger');
            }
        }

        // Load recent disclosures
        async function loadRecentDisclosures() {
            try {
                const response = await axios.get('/api/vault/disclosures?limit=3');
                const disclosures = response.data.data.disclosures;
                
                const container = document.getElementById('recentDisclosures');
                
                if (disclosures.length === 0) {
                    container.innerHTML = '<p class="text-muted text-center">No disclosures yet</p>';
                    return;
                }

                let html = '';
                disclosures.forEach(disclosure => {
                    html += `
                        <div class="disclosure-item status-${disclosure.verificationStatus}">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <strong>${disclosure.purpose}</strong>
                                    <br>
                                    <small class="text-muted">${disclosure.disclosedFields.length} fields</small>
                                </div>
                                <span class="badge bg-${getStatusColor(disclosure.verificationStatus)}">
                                    ${disclosure.verificationStatus}
                                </span>
                            </div>
                            <small class="text-muted">
                                Created: ${new Date(disclosure.createdAt).toLocaleDateString()}
                            </small>
                        </div>
                    `;
                });
                
                container.innerHTML = html;
            } catch (error) {
                console.error('Failed to load disclosures:', error);
            }
        }

        // Handle logout
        function handleLogout(e) {
            e.preventDefault();
            localStorage.removeItem('accessToken');
            localStorage.removeItem('refreshToken');
            window.location.href = '/login';
        }

        // Utility functions
        function showAlert(message, type) {
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
            document.getElementById('alertContainer').innerHTML = alertHtml;
            
            // Auto-remove after 5 seconds
            setTimeout(() => {
                const alert = document.querySelector('.alert');
                if (alert) {
                    bootstrap.Alert.getOrCreateInstance(alert).close();
                }
            }, 5000);
        }

        function formatCategoryName(category) {
            return category.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());
        }

        function formatFieldName(field) {
            return field.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());
        }

        function getStatusColor(status) {
            switch (status) {
                case 'verified': return 'success';
                case 'pending': return 'warning';
                case 'expired': return 'secondary';
                case 'revoked': return 'danger';
                default: return 'secondary';
            }
        }

        // Auto-refresh vault stats every 5 minutes
        setInterval(loadVaultStats, 5 * 60 * 1000);
    </script>
</body>
</html>